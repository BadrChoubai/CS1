CS 1, Fall 2019
Dr. Gurka				      Project #3: Eliza
August 22

Overview

Add some functionality to make Eliza seem more human.

Details

Download the basic Eliza program from Moodle.  Save it as Eliza.java, a plain text file.  Also download the generic_answers.txt file; save it with that exact name, in the same folder as Eliza.java.  

Add the following to Eliza:
at least 10 more generic answers to the data file
also, email me these 10 new answers and I will build a giant file of generic answers
a “yes” case where Eliza answers “Good, you are being positive.”
refer to the “no” case
a case for “I want …” that answers “Why do you want …”
refer to the “I am” case
a case for “I think …” that answers “Why do you think …”
refer to the “I am” case
a case for work that has a set of keywords ("job," etc.)
refer to the family case
a set of input answers for the user statement “I feel <something>”
refer to the generic answers case
this will require another input file of answers: create the file with at least five answers, read the answers into an additional ArrayList, randomly pick from that ArrayList if the user says "I feel …"

Add and test one new feature at a time.

Once you have the enhanced version running, do a user testing session (five to ten minutes) with someone not familiar with programming.  Keep track of how the session goes and any comments they make.

Preliminary Practice
run the original Eliza

Suggested Schedule 
Friday, August 23: Eliza uploaded and running, new generic answers added
Saturday, August 24 - Monday, August 26: additions and testing
user session scheduled?
target completion: Tuesday, August 27
cover letter with discussions, final packet assembled
submission: Thursday, August 29, before class

Testing 
informal testing only – talk to Eliza 
give all the different user answers
does it do what it’s supposed to do?

Discussion Questions (cover letter)
How “human” did Eliza seem when it was first demonstrated in class?  In other words, how much did it seem that Eliza understood what was being said and thought about what answer to give?  Why did it give that impression?  
After you saw and understood the program logic, what did you think about Eliza’s "humanness"?	
What makes Eliza seem not human?  In other words, what would make a user suspect they were talking to a computer, not another human?  Assume the user does not know anything about the implementation (code and logic).
Describe what happened when you had someone else run Eliza.  What were their comments?  Did the conversation run smoothly or go off track and become silly (or stupid)?  
List some features or capabilities you think would make Eliza more realistic.  Don’t be concerned with how they would be coded.
Siri and others are the current versions of an Eliza-like program, just more complicated.  Comment on their “humanness”.  Do you think a new user might be fooled?  Consider a comparison with a human answering all the questions, and “knowing” as much as Siri.  Could you tell the difference?  This is the modern version of the Imitation Game (Alan Turing).
Philosophy (one or two paragraphs).  Can a software system such as Eliza or Siri be considered intelligent?  Why or why not?  (There is no right or wrong answer!)

Grading
30 points
complies without errors, runs without crashing (assuming the user “behaves”), performs the specified operations
the questions (above) are a significant part of the grade for the project 
all deliverables submitted (below)
all specifications followed (this document)

Submission

deliverables
cover letter with discussion questions (use the template on Moodle)
source code (one .java class: Eliza)
if you do the challenges (below), include them in the source code you submit, with a comment (in the code) saying it is extra
input files, two: expanded generic answers,  “feel” answers

due date: Thursday, August 29, beginning of class
all deliverables posted to Moodle
paper copies of all deliverables handed in at the beginning of class

Challenge

After all the specific answers ("I am …", etc.) and before the generic answers case, add a case for short answers from the user for which Eliza prompts them to give longer answers.  First test the length of their answer (use whatever length you think is too short), then print a special message.  Test this new version of your program.

Challenge

Using substring, remove punctuation at the end of user input, so that the Eliza answer does not have double punctuation.
   Current problem:    I am happy.    Why are you happy.?	extra period before the question mark

Challenge 

Check for the words "computer" or "machine" or "Eliza" in user input and have Eliza say, “We’re here to talk about you, not me.”  This assumes the user said something abut Eliza or computers instead of themselves.

